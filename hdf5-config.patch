--- hdf5-1.6.0/config/commence.in.orig	2003-07-03 19:23:35.000000000 +0200
+++ hdf5-1.6.0/config/commence.in	2003-07-19 14:00:59.000000000 +0200
@@ -51,7 +51,7 @@
 LT_LINK_EXE=$(LT) --mode=link $(CC) $(LT_STATIC_EXEC) -dlopen self -rpath $(libdir) $(DYNAMIC_DIRS)
 LT_RUN=$(LT) --mode=execute
 LT_INSTALL_PROG=$(LT) --mode=install $(INSTALL_PROGRAM)
-LT_INSTALL_LIB=$(LT) --mode=install $(INSTALL_DATA)
+LT_INSTALL_LIB=$(LT) --mode=install $(INSTALL_PROGRAM)
 LT_UNINSTALL=$(LT) --mode=uninstall $(RM)
 
 ## Optional variables. We must declare them here because Irix pmake
--- hdf5-1.6.0/c++/config/commence.in.orig	2003-06-30 17:19:35.000000000 +0200
+++ hdf5-1.6.0/c++/config/commence.in	2003-07-19 14:01:16.000000000 +0200
@@ -50,11 +50,11 @@
 DYNAMIC_DIRS=@DYNAMIC_DIRS@
 LT=$(top_builddir)/libtool
 LT_COMPILE=$(LT) --mode=compile $(CXX)
-LT_LINK_LIB=$(LT) --mode=link $(CXX) -static -rpath $(libdir) $(DYNAMIC_DIRS)
-LT_LINK_EXE=$(LT) --mode=link $(CXX) -static $(LT_STATIC_EXEC) -dlopen self -rpath $(bindir) $(DYNAMIC_DIRS)
+LT_LINK_LIB=$(LT) --mode=link $(CXX) -rpath $(libdir) $(DYNAMIC_DIRS)
+LT_LINK_EXE=$(LT) --mode=link $(CXX) $(LT_STATIC_EXEC) -dlopen self -rpath $(bindir) $(DYNAMIC_DIRS)
 LT_RUN=$(LT) --mode=execute
 LT_INSTALL_PROG=$(LT) --mode=install $(INSTALL_PROGRAM)
-LT_INSTALL_LIB=$(LT) --mode=install $(INSTALL_DATA)
+LT_INSTALL_LIB=$(LT) --mode=install $(INSTALL_PROGRAM)
 LT_UNINSTALL=$(LT) --mode=uninstall $(RM)
 
 ## Optional variables. We must declare them here because Irix pmake
--- hdf5-1.6.0/config/gnu-flags.orig	Sat May 11 00:22:18 2002
+++ hdf5-1.6.0/config/gnu-flags	Sat Oct  5 15:25:14 2002
@@ -75,27 +75,6 @@
     sleep 5
 fi
 
-# Architecture-specific flags
-case "$host_os-$host_cpu" in
-    # FreeBSD sets the information from "hostname -m" to the general machine
-    # architecture, not the specific CPU for the machine, so even our
-    # Pentium II Xeon server is set to "i386".  Once we know we are on a FreeBSD
-    # machine, use the "sysctl" command to get the CPU hardware model.
-    freebsd*)
-        host_cpu_model=`sysctl -n hw.model`
-        case "$host_cpu_model" in
-            # Hmm.. this might not catch Celerons, but it won't hurt them either...
-            *Pro*|*II*|*III*|*IV*|*Athlon*)
-                ARCH=${ARCH:="-march=i686"}
-            ;;
-        esac
-        ;;
-
-    *-i686)
-        ARCH=${ARCH:="-march=i686"}
-        ;;
-esac
-
 # Host-specific flags
 case "`hostname`" in
     sleipnir.ncsa.uiuc.edu)
@@ -97,10 +97,10 @@
 	# Production
         case "$cc_vendor-$cc_version" in
             gcc-2.95.[34]|gcc-3*)
-                PROD_CFLAGS="-O3 $NOFP"
+                PROD_CFLAGS="$NOFP"
                 ;;
             *)
-                PROD_CFLAGS="-O $NOFP -finline-functions"
+                PROD_CFLAGS="$NOFP -finline-functions"
                 ;;
         esac
 	PROD_CPPFLAGS=
@@ -129,7 +129,7 @@
 	CFLAGS="$CFLAGS -Wno-long-long"
 
         # Append warning flags from gcc-3* case
-	CFLAGS="$CFLAGS -Wfloat-equal -Wmissing-format-attribute -Wpadded"
+	CFLAGS="$CFLAGS -Wfloat-equal -Wmissing-format-attribute"
 
         # Append warning flags from gcc-3.2* case
 	CFLAGS="$CFLAGS -Wmissing-noreturn -Wpacked -Wdisabled-optimization"
@@ -154,7 +154,7 @@
 	CFLAGS="$CFLAGS -Wno-long-long"
 
         # Append warning flags from gcc-3* case
-	CFLAGS="$CFLAGS -Wfloat-equal -Wmissing-format-attribute -Wpadded"
+	CFLAGS="$CFLAGS -Wfloat-equal -Wmissing-format-attribute"
 
         # Append more extra warning flags that only gcc3.2+ know about
 	CFLAGS="$CFLAGS -Wmissing-noreturn -Wpacked -Wdisabled-optimization"
@@ -176,7 +176,7 @@
 	CFLAGS="$CFLAGS -Wno-long-long"
 
         # Append some extra warning flags that only gcc3+ know about
-	CFLAGS="$CFLAGS -Wfloat-equal -Wmissing-format-attribute -Wpadded"
+	CFLAGS="$CFLAGS -Wfloat-equal -Wmissing-format-attribute"
 
 	# Flags are set
 	cc_flags_set=yes
